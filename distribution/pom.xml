<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>de.ingrid</groupId>
    <artifactId>ingrid-iplug-se-project</artifactId>
    <version>7.6.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>ingrid-iplug-se</artifactId>
  <packaging>pom</packaging>
  <name>InGrid iPlug-SE Distribution</name>

  <!-- ==================== Source Code Management ==================== -->
  <scm>
    <connection>scm:git:git@github.com:informationgrid/ingrid-iplug-se.git/distribution</connection>
    <developerConnection>scm:git:git@github.com:informationgrid/ingrid-iplug-se.git/distribution</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <!-- ==================== DEPENDENCY MANAGEMENT ==================== -->
  <!--
    Dependency Management must be the same as in iplug-module, otherwise the wrong version of
    dependencies will be loaded!
  -->
<!--
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>2.12.2</version>
      </dependency>
      <dependency>
        <groupId>xalan</groupId>
        <artifactId>xalan</artifactId>
        <version>2.7.2</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>4.1.32.Final</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
-->

  <!-- ==================== DEPENDENCIES ==================== -->
  <dependencies>
    <dependency>
      <groupId>de.ingrid</groupId>
      <artifactId>ingrid-iplug-se-iplug</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <!-- ==================== Build Configuration ==================== -->
  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.4.2</version>
        <inherited>true</inherited>
        <configuration>
          <skipAssembly>false</skipAssembly>
        </configuration>
        <executions>
          <execution>
            <id>make-installer</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>true</appendAssemblyId>
              <descriptors>
                <descriptor>assembly/bin.xml</descriptor>
              </descriptors>
              <archive>
                <manifestEntries>
                  <ingridComponentType>IPLUG_SE</ingridComponentType>
                </manifestEntries>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <licenseResolver>${project.baseUri}/../license</licenseResolver>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <!-- in multi module projects version 1.1.1 does not allow POM modules for image build -->
            <version>1.0.0</version>
            <configuration>
              <skipDocker>false</skipDocker>
              <dockerDirectory>distribution/src/docker</dockerDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
